/* Задайте двумерный массив. Напишите программу, которая упорядочит по убыванию элементы каждой строки 
двумерного массива. Например, задан массив:
1 4 7 2
5 9 2 3
8 4 2 4
В итоге получается вот такой массив:
7 4 2 1
9 5 3 2
8 4 4 2
*/

Console.Write("m = ");
int m = int.Parse(Console.ReadLine());
Console.Write("n = ");
int n = int.Parse(Console.ReadLine());

int[,] GetArray(int m, int n, int minValue, int maxValue)
{
    int[,] result = new int[m, n];
    for (int i = 0; i < m; i++)
    {
        for (int j = 0; j < n; j++)
        {
            result[i, j] = new Random().Next(minValue, maxValue + 1);
        }
    }
    return result;
}

void PrintArray(int[,] array)
{
    for (int i = 0; i < array.GetLength(0); i++)
    {
        for (int j = 0; j < array.GetLength(1); j++)
        {
            Console.Write($"{array[i, j]} ");
        }
        Console.WriteLine();
    }
}

int[] SortArray(int[] mas)
{
    int minIndex = 0;
    for (int i = 0; i < mas.Length; i++)
    {
        minIndex = i;
        for (int j = i; j < mas.Length; j++)
        {
            if (mas[j] > mas[minIndex]) minIndex = j;
        }
        if (minIndex == i) continue;
        int k = mas[i];
        mas[i] = mas[minIndex];
        mas[minIndex] = k;
    }
    return mas;
}

int[,] SortRowArray(int[,] array)
{
    int[] row = new int[array.GetLength(1)];
    for (int i = 0; i < array.GetLength(0); i++)
    {
        for (int j = 0; j < array.GetLength(1); j++)
        {
            row[j] = array[i, j];
        }
        row = SortArray(row);
        for (int j = 0; j < array.GetLength(1); j++)
        {
            array[i, j] = row[j];
        }
    }
    return array;
}

int[,] myArray = GetArray(m, n, 0, 9);
PrintArray(myArray);
Console.WriteLine();
myArray = SortRowArray(myArray);
PrintArray(myArray);
