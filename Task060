/* Сформируйте трёхмерный массив из неповторяющихся двузначных чисел. Напишите программу,
которая будет построчно выводить массив, добавляя индексы каждого элемента.
Массив размером 2 x 2 x 2
66(0,0,0) 25(0,1,0)
34(1,0,0) 41(1,1,0)
27(0,0,1) 90(0,1,1)
26(1,0,1) 55(1,1,1)
*/

Console.Write("m = ");
int m = int.Parse(Console.ReadLine());
Console.Write("n = ");
int n = int.Parse(Console.ReadLine());
Console.Write("l = ");
int l = int.Parse(Console.ReadLine());

int[,,] GetArray(int m, int n, int l, int minValue, int maxValue)
{
    int[,,] result = new int[m, n, l];
    for(int i = 0; i < m; i++)
    {
        for(int j = 0; j < n; j++)
        {
            for(int k = 0; k < l; k++)
            {
                result[i, j, k] = new Random().Next(minValue, maxValue);
            }
        }
    }
    return result;
}

void PrintArray(int[,,] array)
{
    for(int i = 0; i < array.GetLength(0); i++)
    {
        for(int j = 0; j < array.GetLength(1); j++)
        {
            for(int k = 0; k < array.GetLength(2); k++)
            {
                Console.Write($"{array[i, j, k]}({i}, {j}, {k}) ");
            }
            Console.WriteLine();
        }
    }
}

int[,,] ChangeTheSameElement(int[,,] arr, int compare, int indexCompare1, int indexCompare2, int indexCompare3)
{
    for(int i = 0; i < arr.GetLength(0); i++)
    {
        for(int j = 0; j < arr.GetLength(1); j++)
        {
            for(int k = 0; k < arr.GetLength(2); k++)
            {
                if (i == indexCompare1 && j == indexCompare2 && k == indexCompare3) continue;
                else if (compare == arr[i, j, k])
                {
                    arr[i, j, k] = new Random().Next(30, 100);
                }
            }
        }
    }
    return arr;
}

int[,,] myArray = GetArray(m, n, l, 10, 30);
PrintArray(myArray);
Console.WriteLine();

for(int i = 0; i < myArray.GetLength(0); i++)
{
    for(int j = 0; j < myArray.GetLength(1); j++)
    {
        for(int k = 0; k < myArray.GetLength(2); k++)
        {
            myArray = ChangeTheSameElement(myArray, myArray[i, j, k], i, j, k);
        }
    }
}

PrintArray(myArray);

